#compdef hist

[[ -z $_HIST__OPTS || -z $_HIST__ARGS ]] &&
  autoload -Uz hist && hist -fs l &> /dev/null

local k v

local -a options=()
print -v options -f '%s[%s]' - "${(kv@)_HIST__OPTS}"
local -a actions=()
print -v actions -f "%s\:'%s'" - "${(kv@)_HIST__ARGS}"

local state
_arguments -s -A '' ${(i)options} ":action:(( ${(j: :)${(i)actions[@]}} ))" \
  ":index, offset or pattern:->selection"

[[ $state == 'selection' ]] ||
  return

local -a keys=() events=() displays=() matches=()
local -i end=15
case $words[CURRENT] in
  '')
    words[CURRENT]=-1
    ;&
  -<1->)
    local -i start=$(( HISTNO + words[CURRENT] ))
    keys=( {$start..$(( start - end ))} )
    print -v events -f "%$#HISTNO.${#HISTNO}s  %s" "${(kv@)history[(I)(${(~j:|:)keys})]}"
    local -a offsets=( {$words[CURRENT]..$(( words[CURRENT] - end ))} )
    local -i len=$(( $#HISTNO + 1 ))
    print -v displays -f "%$len.${len}s  %s" "${(@)offsets:^events}"
    ;;
  <1->)
    keys=( {$words[CURRENT]..$(( words[CURRENT] + end ))} )
    print -v events -f "%$#HISTNO.${#HISTNO}s  %s" "${(kv@)history[(I)(${(~j:|:)keys})]}"
    displays=( "${(Oa@)events[@]}" )
    ;;
  *)
    return
    ;;
esac
local -i MBEGIN MEND
local MATCH
displays=( "${(@)displays[@]:/(#m)*/${(r:COLUMNS-1:)MATCH//$'\n'/\n}}" )
matches=( "${(@)${displays[@]##[[:space:]]#}[@]%%[[:space:]]##*}" )
local expl _comp_no_ignore=1
_description events expl 'index, offset or pattern'
compadd "$expl[@]" -S '' -QU -ld displays -a matches
